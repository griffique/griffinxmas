{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quinn\\\\Google Drive\\\\coding\\\\griffinxmas\\\\app\\\\src\\\\components\\\\Flashcard\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Sound from \"react-sound\";\nimport { motion } from \"framer-motion\";\nimport { FaStar, FaRegStar } from \"react-icons/fa\";\nimport BoldTextHelper from \"./BoldTextHelper\";\nimport styles from \"./styles.module.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cardVariants = {\n  flipped: {\n    rotateY: 180,\n    transition: {\n      duration: 0.5\n    },\n    boxShadow: \"rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px\"\n  },\n  notFlipped: () => ({\n    rotateY: 0,\n    boxShadow: \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\",\n    transition: {\n      duration: 0.5\n    }\n  })\n};\n\nconst Flashcard = ({\n  fading,\n  fadeFunction,\n  flipFunction\n}) => {\n  const cardFlipped = false;\n\n  const handleClick = () => {\n    flipFunction(!cardFlipped);\n  };\n\n  const audioSrc = flipped ? `definition${currentCard.defSound}.mp3` : `term${currentCard.termSound}.mp3`;\n  const modalAudio = `example${currentCard.exSound}.mp3`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.cardContainer,\n      children: [/*#__PURE__*/_jsxDEV(Sound, {\n        autoLoad: true,\n        onLoad: () => {\n          setAudioLoaded(true);\n        },\n        onStop: () => {\n          setPlayed(true);\n        },\n        playStatus: exampleMode || !audioLoaded || played ? \"STOPPED\" : \"PLAYING\",\n        url: `/media/${audioSrc}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: flipped && !fading ? styles.cardTopBack : styles.cardTop,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.favButton} button is-ghost ${fading ? \"is-invisible\" : \"\"}`,\n          type: \"button\",\n          onClick: () => {\n            cardSet[cardNumber].favorite = !cardSet[cardNumber].favorite;\n            setCardSet([...cardSet]);\n            localStorage.setItem(\"cardSet\", JSON.stringify(cardSet));\n          },\n          children: cardSet[cardNumber].favorite ? /*#__PURE__*/_jsxDEV(FaStar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(FaRegStar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: fading || !cardFlipped ? \"is-hidden\" : `button is-danger ${styles.exampleButton}`,\n          onClick: () => {\n            setExampleMode(!exampleMode);\n            const exampleDiv = document.getElementById(\"example-text\");\n            exampleDiv.innerHTML = BoldTextHelper(currentCard.term, currentCard.example);\n          },\n          children: \"Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"button\",\n        tabIndex: 0,\n        className: styles.flashcards,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(motion.div, {\n            className: styles.card,\n            onClick: () => handleClick(currentCard),\n            variants: cardVariants,\n            animate: cardFlipped ? \"flipped\" : \"notFlipped\",\n            children: /*#__PURE__*/_jsxDEV(motion.div, {\n              className: cardFlipped ? `${styles.backContent}` : `${styles.frontContent}`,\n              onMouseDown: () => {\n                fadeFunction();\n              },\n              onMouseUp: () => {\n                setTimeout(() => {\n                  fadeFunction();\n                }, 500);\n              },\n              animate: {\n                opacity: fading ? 0 : 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: fading ? \"is-hidden\" : \"\",\n                children: cardFlipped ? currentCard.definition : currentCard.term\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: fading || !cardFlipped ? \"is-hidden\" : `${styles.imageContainer}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: styles.cardImage,\n                  src: `images/${currentCard.image}.jpg`,\n                  alt: currentCard.term\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, currentCard.term, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: exampleMode ? \"modal is-active has-text-centered\" : \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal-content ${styles.exampleText}`,\n        id: \"example-text\",\n        children: \"Example Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sound, {\n        url: `/media/${modalAudio}`,\n        playStatus: exampleMode ? \"PLAYING\" : \"STOPPED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"modal-close is-large\",\n        \"aria-label\": \"close\",\n        onClick: () => {\n          setExampleMode(!exampleMode);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Flashcard;\nFlashcard.propTypes = {\n  cardNumber: PropTypes.number.isRequired,\n  fading: PropTypes.bool.isRequired,\n  fadeFunction: PropTypes.func.isRequired,\n  flipFunction: PropTypes.func.isRequired,\n  flipped: PropTypes.bool.isRequired\n};\nexport default Flashcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"sources":["C:/Users/quinn/Google Drive/coding/griffinxmas/app/src/components/Flashcard/index.js"],"names":["React","useEffect","useState","PropTypes","Sound","motion","FaStar","FaRegStar","BoldTextHelper","styles","cardVariants","flipped","rotateY","transition","duration","boxShadow","notFlipped","Flashcard","fading","fadeFunction","flipFunction","cardFlipped","handleClick","audioSrc","currentCard","defSound","termSound","modalAudio","exSound","cardContainer","setAudioLoaded","setPlayed","exampleMode","audioLoaded","played","cardTopBack","cardTop","favButton","cardSet","cardNumber","favorite","setCardSet","localStorage","setItem","JSON","stringify","exampleButton","setExampleMode","exampleDiv","document","getElementById","innerHTML","term","example","flashcards","card","backContent","frontContent","setTimeout","opacity","definition","imageContainer","cardImage","image","exampleText","propTypes","number","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Sound from \"react-sound\";\r\nimport { motion } from \"framer-motion\";\r\nimport { FaStar, FaRegStar } from \"react-icons/fa\";\r\nimport BoldTextHelper from \"./BoldTextHelper\";\r\nimport styles from \"./styles.module.sass\";\r\n\r\nconst cardVariants = {\r\n  flipped: {\r\n    rotateY: 180,\r\n    transition: { duration: 0.5 },\r\n    boxShadow:\r\n      \"rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px\",\r\n  },\r\n  notFlipped: () => ({\r\n    rotateY: 0,\r\n    boxShadow:\r\n      \"rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px\",\r\n    transition: { duration: 0.5 },\r\n  }),\r\n};\r\nconst Flashcard = ({ fading, fadeFunction, flipFunction }) => {\r\n  const cardFlipped = false;\r\n\r\n  const handleClick = () => {\r\n    flipFunction(!cardFlipped);\r\n  };\r\n\r\n  const audioSrc = flipped\r\n    ? `definition${currentCard.defSound}.mp3`\r\n    : `term${currentCard.termSound}.mp3`;\r\n\r\n  const modalAudio = `example${currentCard.exSound}.mp3`;\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.cardContainer}>\r\n        <Sound\r\n          autoLoad\r\n          onLoad={() => {\r\n            setAudioLoaded(true);\r\n          }}\r\n          onStop={() => {\r\n            setPlayed(true);\r\n          }}\r\n          playStatus={\r\n            exampleMode || !audioLoaded || played ? \"STOPPED\" : \"PLAYING\"\r\n          }\r\n          url={`/media/${audioSrc}`}\r\n        />\r\n        <div\r\n          className={flipped && !fading ? styles.cardTopBack : styles.cardTop}\r\n        >\r\n          <button\r\n            className={`${styles.favButton} button is-ghost ${\r\n              fading ? \"is-invisible\" : \"\"\r\n            }`}\r\n            type=\"button\"\r\n            onClick={() => {\r\n              cardSet[cardNumber].favorite = !cardSet[cardNumber].favorite;\r\n              setCardSet([...cardSet]);\r\n              localStorage.setItem(\"cardSet\", JSON.stringify(cardSet));\r\n            }}\r\n          >\r\n            {cardSet[cardNumber].favorite ? <FaStar /> : <FaRegStar />}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={\r\n              fading || !cardFlipped\r\n                ? \"is-hidden\"\r\n                : `button is-danger ${styles.exampleButton}`\r\n            }\r\n            onClick={() => {\r\n              setExampleMode(!exampleMode);\r\n              const exampleDiv = document.getElementById(\"example-text\");\r\n              exampleDiv.innerHTML = BoldTextHelper(\r\n                currentCard.term,\r\n                currentCard.example\r\n              );\r\n            }}\r\n          >\r\n            Example\r\n          </button>\r\n        </div>\r\n        <div role=\"button\" tabIndex={0} className={styles.flashcards}>\r\n          <div>\r\n            <motion.div\r\n              className={styles.card}\r\n              key={currentCard.term}\r\n              onClick={() => handleClick(currentCard)}\r\n              variants={cardVariants}\r\n              animate={cardFlipped ? \"flipped\" : \"notFlipped\"}\r\n            >\r\n              <motion.div\r\n                className={\r\n                  cardFlipped\r\n                    ? `${styles.backContent}`\r\n                    : `${styles.frontContent}`\r\n                }\r\n                onMouseDown={() => {\r\n                  fadeFunction();\r\n                }}\r\n                onMouseUp={() => {\r\n                  setTimeout(() => {\r\n                    fadeFunction();\r\n                  }, 500);\r\n                }}\r\n                animate={{ opacity: fading ? 0 : 1 }}\r\n              >\r\n                <div className={fading ? \"is-hidden\" : \"\"}>\r\n                  {cardFlipped ? currentCard.definition : currentCard.term}\r\n                </div>\r\n                <div\r\n                  className={\r\n                    fading || !cardFlipped\r\n                      ? \"is-hidden\"\r\n                      : `${styles.imageContainer}`\r\n                  }\r\n                >\r\n                  <img\r\n                    className={styles.cardImage}\r\n                    src={`images/${currentCard.image}.jpg`}\r\n                    alt={currentCard.term}\r\n                  />\r\n                </div>\r\n              </motion.div>\r\n            </motion.div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={exampleMode ? \"modal is-active has-text-centered\" : \"modal\"}\r\n      >\r\n        <div className=\"modal-background\" />\r\n        <div\r\n          className={`modal-content ${styles.exampleText}`}\r\n          id=\"example-text\"\r\n        >\r\n          Example Loading\r\n        </div>\r\n        <Sound\r\n          url={`/media/${modalAudio}`}\r\n          playStatus={exampleMode ? \"PLAYING\" : \"STOPPED\"}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className=\"modal-close is-large\"\r\n          aria-label=\"close\"\r\n          onClick={() => {\r\n            setExampleMode(!exampleMode);\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFlashcard.propTypes = {\r\n  cardNumber: PropTypes.number.isRequired,\r\n  fading: PropTypes.bool.isRequired,\r\n  fadeFunction: PropTypes.func.isRequired,\r\n  flipFunction: PropTypes.func.isRequired,\r\n  flipped: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Flashcard;\r\n"]},"metadata":{},"sourceType":"module"}