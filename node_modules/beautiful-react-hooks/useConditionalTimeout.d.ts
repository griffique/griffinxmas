declare type UseConditionalTimeoutOptions = {
    cancelOnUnmount?: boolean;
    cancelOnConditionChange?: boolean;
};
/**
 * An async-utility hook that accepts a callback function and a delay time (in milliseconds), then delays the
 * execution of the given function by the defined time from when the condition verifies.
 */
declare const useConditionalTimeout: <T extends (...args: any[]) => any>(fn: T, milliseconds: number, condition: boolean, options?: UseConditionalTimeoutOptions) => [boolean, () => void];
export default useConditionalTimeout;
