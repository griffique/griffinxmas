import { DebouncedFunc } from './shared/types';
export declare type DebounceOptions = {
    leading?: boolean | undefined;
    maxWait?: number | undefined;
    trailing?: boolean | undefined;
};
/**
 * Accepts a function and returns a new debounced yet memoized version of that same function that delays
 * its invoking by the defined time.
 * If time is not defined, its default value will be 100ms.
 */
declare const useDebouncedFn: <T extends (...args: any) => any>(fn: T, wait?: number, options?: DebounceOptions, dependencies?: any[]) => DebouncedFunc<T>;
export default useDebouncedFn;
